<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuling.web.dao.TaskFileMapper">
  <resultMap id="BaseResultMap" type="com.jiuling.web.model.TaskFile">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_suffix" jdbcType="VARCHAR" property="fileSuffix" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_nameafterupload" jdbcType="VARCHAR" property="fileNameafterupload" />
    <result column="file_pathafterupload" jdbcType="VARCHAR" property="filePathafterupload" />
    <result column="file_local_path" jdbcType="VARCHAR" property="fileLocalPath" />
    <result column="file_description" jdbcType="VARCHAR" property="fileDescription" />
    <result column="thumb_nail" jdbcType="VARCHAR" property="thumbNail" />
    <result column="file_size" jdbcType="VARCHAR" property="fileSize" />
    <result column="create_uerid" jdbcType="BIGINT" property="createUerid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="slave_ip" jdbcType="VARCHAR" property="slaveIp" />
    <result column="c1" jdbcType="BIGINT" property="c1" />
    <result column="c2" jdbcType="BIGINT" property="c2" />
    <result column="c3" jdbcType="BIGINT" property="c3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, task_id, file_type, file_suffix, file_name, file_nameafterupload, file_pathafterupload, 
    file_local_path, file_description, thumb_nail, file_size, create_uerid, create_time, 
    slave_ip, c1, c2, c3
  </sql>
  <select id="selectByExample" parameterType="com.jiuling.web.model.TaskFileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from task_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_file
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task_file
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiuling.web.model.TaskFileExample">
    delete from task_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiuling.web.model.TaskFile">
    insert into task_file (id, task_id, file_type, 
      file_suffix, file_name, file_nameafterupload, 
      file_pathafterupload, file_local_path, file_description, 
      thumb_nail, file_size, create_uerid, 
      create_time, slave_ip, c1, 
      c2, c3)
    values (#{id,jdbcType=BIGINT}, #{taskId,jdbcType=BIGINT}, #{fileType,jdbcType=VARCHAR}, 
      #{fileSuffix,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{fileNameafterupload,jdbcType=VARCHAR}, 
      #{filePathafterupload,jdbcType=VARCHAR}, #{fileLocalPath,jdbcType=VARCHAR}, #{fileDescription,jdbcType=VARCHAR}, 
      #{thumbNail,jdbcType=VARCHAR}, #{fileSize,jdbcType=VARCHAR}, #{createUerid,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{slaveIp,jdbcType=VARCHAR}, #{c1,jdbcType=BIGINT}, 
      #{c2,jdbcType=BIGINT}, #{c3,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jiuling.web.model.TaskFile">
    insert into task_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="fileSuffix != null">
        file_suffix,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileNameafterupload != null">
        file_nameafterupload,
      </if>
      <if test="filePathafterupload != null">
        file_pathafterupload,
      </if>
      <if test="fileLocalPath != null">
        file_local_path,
      </if>
      <if test="fileDescription != null">
        file_description,
      </if>
      <if test="thumbNail != null">
        thumb_nail,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="createUerid != null">
        create_uerid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="slaveIp != null">
        slave_ip,
      </if>
      <if test="c1 != null">
        c1,
      </if>
      <if test="c2 != null">
        c2,
      </if>
      <if test="c3 != null">
        c3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null">
        #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileNameafterupload != null">
        #{fileNameafterupload,jdbcType=VARCHAR},
      </if>
      <if test="filePathafterupload != null">
        #{filePathafterupload,jdbcType=VARCHAR},
      </if>
      <if test="fileLocalPath != null">
        #{fileLocalPath,jdbcType=VARCHAR},
      </if>
      <if test="fileDescription != null">
        #{fileDescription,jdbcType=VARCHAR},
      </if>
      <if test="thumbNail != null">
        #{thumbNail,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="createUerid != null">
        #{createUerid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="slaveIp != null">
        #{slaveIp,jdbcType=VARCHAR},
      </if>
      <if test="c1 != null">
        #{c1,jdbcType=BIGINT},
      </if>
      <if test="c2 != null">
        #{c2,jdbcType=BIGINT},
      </if>
      <if test="c3 != null">
        #{c3,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiuling.web.model.TaskFileExample" resultType="java.lang.Long">
    select count(*) from task_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_file
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSuffix != null">
        file_suffix = #{record.fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileNameafterupload != null">
        file_nameafterupload = #{record.fileNameafterupload,jdbcType=VARCHAR},
      </if>
      <if test="record.filePathafterupload != null">
        file_pathafterupload = #{record.filePathafterupload,jdbcType=VARCHAR},
      </if>
      <if test="record.fileLocalPath != null">
        file_local_path = #{record.fileLocalPath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileDescription != null">
        file_description = #{record.fileDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.thumbNail != null">
        thumb_nail = #{record.thumbNail,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=VARCHAR},
      </if>
      <if test="record.createUerid != null">
        create_uerid = #{record.createUerid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.slaveIp != null">
        slave_ip = #{record.slaveIp,jdbcType=VARCHAR},
      </if>
      <if test="record.c1 != null">
        c1 = #{record.c1,jdbcType=BIGINT},
      </if>
      <if test="record.c2 != null">
        c2 = #{record.c2,jdbcType=BIGINT},
      </if>
      <if test="record.c3 != null">
        c3 = #{record.c3,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_file
    set id = #{record.id,jdbcType=BIGINT},
      task_id = #{record.taskId,jdbcType=BIGINT},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      file_suffix = #{record.fileSuffix,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_nameafterupload = #{record.fileNameafterupload,jdbcType=VARCHAR},
      file_pathafterupload = #{record.filePathafterupload,jdbcType=VARCHAR},
      file_local_path = #{record.fileLocalPath,jdbcType=VARCHAR},
      file_description = #{record.fileDescription,jdbcType=VARCHAR},
      thumb_nail = #{record.thumbNail,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=VARCHAR},
      create_uerid = #{record.createUerid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      slave_ip = #{record.slaveIp,jdbcType=VARCHAR},
      c1 = #{record.c1,jdbcType=BIGINT},
      c2 = #{record.c2,jdbcType=BIGINT},
      c3 = #{record.c3,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiuling.web.model.TaskFile">
    update task_file
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null">
        file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileNameafterupload != null">
        file_nameafterupload = #{fileNameafterupload,jdbcType=VARCHAR},
      </if>
      <if test="filePathafterupload != null">
        file_pathafterupload = #{filePathafterupload,jdbcType=VARCHAR},
      </if>
      <if test="fileLocalPath != null">
        file_local_path = #{fileLocalPath,jdbcType=VARCHAR},
      </if>
      <if test="fileDescription != null">
        file_description = #{fileDescription,jdbcType=VARCHAR},
      </if>
      <if test="thumbNail != null">
        thumb_nail = #{thumbNail,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="createUerid != null">
        create_uerid = #{createUerid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="slaveIp != null">
        slave_ip = #{slaveIp,jdbcType=VARCHAR},
      </if>
      <if test="c1 != null">
        c1 = #{c1,jdbcType=BIGINT},
      </if>
      <if test="c2 != null">
        c2 = #{c2,jdbcType=BIGINT},
      </if>
      <if test="c3 != null">
        c3 = #{c3,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiuling.web.model.TaskFile">
    update task_file
    set task_id = #{taskId,jdbcType=BIGINT},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_nameafterupload = #{fileNameafterupload,jdbcType=VARCHAR},
      file_pathafterupload = #{filePathafterupload,jdbcType=VARCHAR},
      file_local_path = #{fileLocalPath,jdbcType=VARCHAR},
      file_description = #{fileDescription,jdbcType=VARCHAR},
      thumb_nail = #{thumbNail,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=VARCHAR},
      create_uerid = #{createUerid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      slave_ip = #{slaveIp,jdbcType=VARCHAR},
      c1 = #{c1,jdbcType=BIGINT},
      c2 = #{c2,jdbcType=BIGINT},
      c3 = #{c3,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>